DOM(ドキュメントオブジェクトモデル)
DOMに要素を追加するときは処理が遅い
パフォーマンスが落ちる

DOMを変更せずに表示を変更するには
変更が必要な箇所のみを変更する必要がある

ボタンを押して、変更する際に
前の画面と見比べて、差分のみを変更する

ブラウザのDOMへアクセスするには時間がかかるので
jsで仮想DOMを作り、前回との差分を変更させる

仮想DOM
jsスクリプトオブジェクトを持っておいて、前回の仮想DOMと見比べて変化させる

vue.jsは仮想DOMを作り、効率よく差分を反映させてくれる

vueインスタンスライフサイクル

1 new Vue()           beforeCreate()
2 インスタンスが作られる  created()
3 elプロパティがあるか    templateをrender関数にコンパイル
3 elプロパティがない場合   $.mount()が呼ばれたらrender関数にコンパイル
4 $elを作って実際にDOMに追加  beforeMount()
5 Mounted 仮想DOMからDOMに反映
6 データが変わったら、再描画 beforeUpdate() 再描画手前
7 updated()
8 Destroyed

実践的な開発を作る上で必要な機能
 Vue CLI
 必要な理由
  ファイルの分割
  最終的なコードの軽量化
  babel TypeScript ESLintなどのPluginの使用
  HMR(Hot Module Replacement)コードの差分を自動で変えてくれる
  .vue TS Scss Pug ES6 などの使用

インストール方法
 npm ノードパッケージマネージャーを使う
npm install -g @vue/cli でインストールする -gはグローバルインストール

paobaoはNoで良い
vueのバージョンは2を選択
yarnかnpmはどちらでも良い
